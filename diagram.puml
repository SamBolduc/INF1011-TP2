@startuml

skinparam linetype ortho

abstract class AbstractMembre {
- string nom
- string adresse
- Date dateAdhésion
- string codeCarteAdhésion
+ void AcheterArticle(Article, PointDeVente)
}

class MembreParticulier {
- Date dateDeNaissance
- string numCarteIdentite
}

class MembreEntreprise {
- string numEntreprise
- string numRegistre
}

class Employé {
- string nomComplet
- Date debutEmploi
+ void AjouterNouvelArticle(Article)
+ void ModifierArticle(Article)
+ void SupprimerArticle(Article)
}

class SousDirecteur {
+ void AjouterEmployé(infos, PointDeVente)
+ void ModifierEmployé(Employé, infos)
+ void SupprimerEmployé(Employé)
}

class Directeur {
+ void AjouterPointDeVente(SousDirecteur)
+ void ModifierPointDeVente(PointDeVente, infos)
+ void SupprimerPointDeVente()
+ void ChangerSousDirecteur(PointDeVente, SousDirecteur)
}

class Transaction {
- int id
- AbstractMembre acheteur
- Date date
- Number prixTotal
+ Number getPrixTotal()
+ AbstractMembre getAcheteur()
+ void AjouterArticle(Article)
+ void ModifierArticle(Article, infos)
+ void SupprimerArticle(Article)
+ void ProcéderPaiement()
}

class Article {
- string id
- string description
- Number prix
- string taille
- int quantite
}

class Registre {
- List<Transaction> transactions
+ Transaction getTransactionById(idTransaction)
+ void NouvelleTransaction(AbstractMembre)
+ void AnnulerTransaction(Transaction)
+ void SupprimerTransaction(Transaction)
+ void ArchiverTransaction(Transaction)
+ void ArchiverJournée()
+ void GénérerReçu(Transaction)
}

enum StatutTransaction{
PAYÉ
ATTENTE_PAIEMENT
}

class Entreprise {
- string nom
- string numEntreprise
- string numRegistre
- List<AbstractMembre> membres
- List<PointDeVente> pointDeVentes
+ AbstractMembre getMembreById(idMembre)
+ void AjouterNouveauMembre(infos)
+ void ModifierMembre(AbstractMembre, infos)
+ void SupprimerMembre(AbstractMembre)
+ void ActiverMembre(AbstractMembre)
+ void DésactiverMembre(AbstractMembre)
}

class PointDeVente {
- string id
- string adresse
- List<Employé> employés
+ Employé getEmployéById(idEmployé)
+ double getTaxes()
+ boolean vérifierCarteMembre(codeCarteAdhésion)
+ void faireRemboursement(idTransaction)
}

class Catalogue {
- List<Article> articles
}

abstract class Paiement {}

class PaiementCredit {}

class PaiementCash {}

class PaiementCheque {}

Employé <|-- SousDirecteur
SousDirecteur <|-- Directeur

Paiement <|-- PaiementCredit
Paiement <|-- PaiementCash
Paiement <|-- PaiementCheque

Entreprise *-- PointDeVente
Entreprise *--- Catalogue
Catalogue *-- Article
Entreprise *-- Directeur
PointDeVente *-- SousDirecteur
PointDeVente *-- Employé
PointDeVente *-- Registre

Registre *-- Transaction
Transaction <-- StatutTransaction
Transaction *-- Paiement
Transaction o- Article

AbstractMembre --* Entreprise
MembreParticulier<|-- AbstractMembre
MembreEntreprise <|-- AbstractMembre

@enduml

